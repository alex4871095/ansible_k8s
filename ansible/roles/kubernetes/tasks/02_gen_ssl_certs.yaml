---
- name: generate cluster ca
  become: true
  shell: cfssl gencert -initca ca-csr.json | cfssljson -bare ca
  args:
    chdir: "/etc/ansible/roles/kubernetes/files/"
    creates: "ca-key.pem, ca.pem"

- name: generate admin certificate
  become: true
  shell: cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes admin-csr.json | cfssljson -bare admin
  args:
    chdir: "/etc/ansible/roles/kubernetes/files/"
    creates: "admin-key.pem, admin.pem"

- name: generate kubernetes controller manager certificate
  become: true
  shell: cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager
  args:
    chdir: "/etc/ansible/roles/kubernetes/files/"
    creates: "kube-controller-manager-key.pem, kube-controller-manager.pem"

- name: generate kubernetes scheduler certificate
  become: true
  shell: cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes kube-scheduler-csr.json | cfssljson -bare kube-scheduler
  args:
    chdir: "/etc/ansible/roles/kubernetes/files/"
    creates: "kube-scheduler-key.pem, kube-scheduler.pem"

- name: generate kube proxy certificate
  become: true
  shell: cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes kube-proxy-csr.json | cfssljson -bare kube-proxy
  args:
    chdir: "/etc/ansible/roles/kubernetes/files/"
    creates: "kube-proxy-key.pem, kube-proxy.pem"

- name: generate service account certificate
  become: true
  shell: cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes service-account-csr.json | cfssljson -bare service-account
  args:
    chdir: "/etc/ansible/roles/kubernetes/files/"
    creates: "service-account-key.pem, service-account.pem"

- name: generate csr for each worker
  become: true
  template:
    src: /etc/ansible/roles/kubernetes/templates/worker_csr.j2
    dest: "/etc/ansible/roles/kubernetes/files/{{ item.key }}-csr.json"
    mode: 0644
  with_dict: "{{ host_roles }}"
  when: item.value.type == "worker"

- name: generate kubelet certificate for each worker
  become: true
  shell: cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname={{ item.key }},{{ item.value.ipaddress }} -profile=kubernetes {{ item.key }}-csr.json | cfssljson -bare {{ item.key }}
  args:
    chdir: "/etc/ansible/roles/kubernetes/files/"
    creates: "{{ item.key }}-key.pem, {{ item.key }}.pem"
  with_dict: "{{ host_roles }}"
  when: item.value.type == "worker"

- name: create an empty list
  set_fact:
    masters_ip: []

- name: forming list of masters ip addresses
  set_fact:
    masters_ip: "{{ masters_ip }} + [ '{{ item.value.ipaddress }}' ]"
  with_dict: "{{ host_roles }}"
  when: item.value.type == "master"

- name: adding public cluster ip to the list of masters ip addresses
  set_fact:
    masters_ip: "{{ masters_ip }} +  [ '{{ cluster_public_ip }}' ]"

- name: adding default kube svc ip to the list of masters ip addresses
  set_fact:
    masters_ip: "{{ masters_ip }} +  [ '{{ kube_default_svc }}' ]"

- name: forming string from list
  set_fact:
    masters: "{{ masters_ip | join(',') }}"

- name: check formed masters string
  debug: msg="{{ masters }}"

- name: generate kubernetes api server certificate
  become: true
  shell: cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname={{ masters }},127.0.0.1,kubernetes.default -profile=kubernetes kubernetes-csr.json | cfssljson -bare kubernetes
  args:
    chdir: "/etc/ansible/roles/kubernetes/files/"
    creates: "kubernetes-key.pem, kubernetes.pem"

- name: set permissions on masters certificates
  become: true
  file:
    path: "{{ item }}"
    owner: "{{ setup_user }}"
  with_items:
    - "/etc/ansible/roles/kubernetes/files/ca-key.pem"
    - "/etc/ansible/roles/kubernetes/files/ca.pem"
    - "/etc/ansible/roles/kubernetes/files/admin-key.pem"
    - "/etc/ansible/roles/kubernetes/files/admin.pem"
    - "/etc/ansible/roles/kubernetes/files/kubernetes-key.pem"
    - "/etc/ansible/roles/kubernetes/files/kubernetes.pem"
    - "/etc/ansible/roles/kubernetes/files/kube-controller-manager-key.pem"
    - "/etc/ansible/roles/kubernetes/files/kube-controller-manager.pem"
    - "/etc/ansible/roles/kubernetes/files/kube-scheduler-key.pem"
    - "/etc/ansible/roles/kubernetes/files/kube-scheduler.pem"
    - "/etc/ansible/roles/kubernetes/files/service-account-key.pem"
    - "/etc/ansible/roles/kubernetes/files/service-account.pem"

- name: set permissions on workers certificates
  become: true
  file:
    path: "/etc/ansible/roles/kubernetes/files/{{ item.key }}-key.pem"
    owner: "{{ setup_user }}"
  with_dict: "{{ host_roles }}"
  when: item.value.type == "worker"

- name: set permissions on workers keys
  become: true
  file:
    path: "/etc/ansible/roles/kubernetes/files/{{ item.key }}.pem"
    owner: "{{ setup_user }}"
  with_dict: "{{ host_roles }}"
  when: item.value.type == "worker"
